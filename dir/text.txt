ЛАБОРАТОРНАЯ РАБОТА № 1
Методы упаковки данных
1. Цель работы
Ознакомление с методами сжатия данных без потерь. Создание
архиваторов
2. Задание
Реализовать два алгоритм сжатия данных без потерь (или с
потерями). Работа оценивается по 100 бальной шкале, затем переводится в
соответствующие баллы БРС (учитывается сложность реализации).
Оценить коэффициенты статистического сжатия и эффективности у
энтроптйного метода сжатия.
Оценить степень сжатия различных файлов.
Облегченный вариант (до 60 балллов)
Построение эффективного кода по методике Шеннона-Фэно и
Хаффмена, оценка их эффективности.
Для построения кода берем фразу, длиной 300 – 500 символов
русского алфавита.
Оцениваем степень сжатия архиватора, разработанного по
указанным методикам
ЛАБОРАТОРНАЯ РАБОТА № 2
Помехоустойчивое кодирование
1. Цель работы
Ознакомление с принципами создания помехоустойчивого кода. Оценка
степени избыточности и корректирующей способности.
2. Задание
Возможные варианты выполнения лабораторной работы:
1. Программная реализация помехоустойчивого кода и механизма
исправления и обнаружения ошибок в кодовых комбинациях. (Кроме
кода Хэмминга). Код Хэмминга – 50 баллов
2. Выполнить задание на лабораторную работу (Приложение)
3. Реферат Помехоустойчивое кодирование – подробное с
ПРИМЕРАМИ описание кода, принципов его построения,
исправления ошибое
ЛАБОРАТОРНАЯ РАБОТА № 3
QR и штрих код
1. Цель работы
Изучение и алгоритмов генерации и методик применения кодов.
2. Задание на лабораторную работу
Создать приложение, генерирующее штрих – коды и QR-коды.
Можно использовать готовые библиотеки. В отчете описать основные
алгоритмы и методики генерации указанных кодов. Провести анализ
помехозащищенности кода .
Варианты: попытка самостоятельной реализации кодов или кодов
Рида – Соломона – тогда можно зачесть 2 работы, в том числе и
помехоустойчивое кодирование
3. Оценивание лабораторной работы
При оценивании лабораторной работы учитывается понимание
теоретического материала
ЛАБОРАТОРНАЯ РАБОТА № 4
Криптография
1. Цель работы
Изучение алгоритмов блочной криптографии.
2. Задание на лабораторную работу
Программная реализация криптографического алгоритма (кроме
RSA)
Использование библиотек снижает балл.
ЛАБОРАТОРНАЯ РАБОТА № 2
ВАРИАНТ 2
Помехоустойчивое кодирование
3. Основные понятия и приемы
Кодирование должно осуществляться так, чтобы сигнал,
соответствующий принятой последовательности символов, после воздействия
на него предполагаемой в канале помехи оставался ближе к сигналу,
соответствующему конкретной переданной последовательности символов,
чем к сигналам, соответствующим другим возможным последовательностям.
Это достигается ценой введения при кодировании избыточности, которая
позволяет так выбрать передаваемые последовательности символов, чтобы
они удовлетворяли дополнительным условиям, проверка которых на
приемной стороне дает возможность обнаружить и исправить ошибки. Коды,
обладающие таким свойством, получили название помехоустойчивых. Они
используются как для исправления ошибок (корректирующие коды), так и для
их обнаружения.
3.1. Линейные групповые коды
Линейными называются коды, в которых проверочные символы
представляют собой линейные комбинации информационных символов.
Для двоичных кодов в качестве линейной операции используют
сложение по модулю 2.
Правила сложения по модулю 2 определяются следующими
равенствами:
0  0 = 0; 0  1 = 1; 1  0 = 1; 1  1 = 0.
Кодовый вектор  последовательность нулей и единиц,
принадлежащих данному коду.
Свойство линейных кодов: сумма (разность) кодовых векторов
линейного кода дает вектор, принадлежащий данному коду.
Линейные коды образуют алгебраическую группу по отношению к
операции сложения по модулю 2. В этом смысле они являются групповыми
кодами.
Свойство группового кода: минимальное кодовое расстояние между
кодовыми векторами группового кода равно минимальному весу ненулевых
кодовых векторов.
Вес кодового вектора (кодовой комбинации) равен числу его
ненулевых компонентов.
Расстояние между двумя кодовыми векторами равно весу вектора,
полученного в результате сложения исходных векторов по модулю 2. Таким
образом, для данного группового кода
Wмин = d 0.
Групповые коды удобно задавать матрицами, размерность которых
определяется параметрами кода nи и nк . Число строк матрицы равно nи, число
столбцов равно nи + nк = n:
Сn; nи =
и и и и и и и к
и к
и к
n n n n n n n n
n n
n n
a a a p p p
a a a p p p
a a a p p p
... ...
... ...
... ...
1 2 1 2
21 22 2 21 22 2
11 12 1 11 12 1
.
Коды, порождаемые этими матрицами, известны как (n; k)  коды, где
k = nи, а соответствующие им матрицы называют порождающими,
образующими, производящими.
3.2. Циклические коды
Циклические коды названы так потому, что в них часть комбинаций
кода либо все комбинации могут быть получены путем циклического сдвига
одной или нескольких комбинаций кода. Циклический сдвиг осуществляется
справа налево, причем крайний левый символ каждый раз переносится в
конец комбинации.
3.2.1. Построение и декодирование конкретных циклических кодов
3.2.1.1. Коды, исправляющие одиночную ошибку, d0 = 3
1. Выбор образующего многочлена производится по таблицам
неприводимых двоичных многочленов.
Образующий многочлен К(х) следует выбирать как можно более
коротким, но степень его должна быть не меньше числа контрольных
разрядов nк, а число ненулевых членов  не меньше минимального кодового
расстояния d0.
2. Выбор параметров единичной транспонированной матрицы
происходит из условия, что число столбцов (строк) матрицы определяется
числом информационных разрядов, т.е. ранг единичной матрицы равен nи.
3. Определение параметров дополнительной матрицы производится
по остаткам от деления последней строки транспонированной матрицы
(единицы с нулями) на образующий многочлен. Полученные остатки должны
удовлетворять следующим требованиям:
а) число разрядов каждого остатка должно быть равно числу
контрольных символов nк, следовательно, число разрядов дополнительной
матрицы должно быть равно степени образующего многочлена;
б) число остатков должно быть не меньше числа строк единичной
транспонированной матрицы, т.е. должно быть равно числу информационных
разрядов nи;
в) число единиц каждого остатка, т.е. его вес, должно быть не менее
величины r = d0  1, где d0  минимальное кодовое расстояние, не меньшее
числа обнаруживаемых ошибок;
г) количество нулей, приписываемых к единице с нулями при делении
ее на выбранный неприводимый многочлен, должно быть таким, чтобы
соблюдались условия а), б), в).
4. Образующая матрица составляется дописыванием элементов
дополнительной матрицы справа от единичной транспонированной матрицы
либо умножением элементов единичной матрицы на образующий многочлен.
5. Комбинациями искомого кода являются строки образующей
матрицы и все возможные суммы по модулю 2 различных сочетаний строк
образующей матрицы.
6. Обнаружение и исправление ошибок производится по остаткам от
деления принятой комбинации F(х) на образующий многочлен К(х). Если
принятая комбинация делится на образующий многочлен без остатка, то
код принят безошибочно. Остаток от деления свидетельствует о наличии
ошибки, но не указывает, какой именно. Для того чтобы найти ошибочный
разряд и исправить его в циклических кодах, осуществляют следующие
операции:
а) принятую комбинацию делят на образующий многочлен и
б) подсчитывают количество единиц в остатке (вес остатка). Если W
 s, где s  допустимое число исправляемых данным кодом ошибок, то
принятую комбинацию складывают по модулю 2 с полученным остатком.
Сумма даст исправленную комбинацию. Если W > s, то
в) производят циклический сдвиг принятой комбинации F(х) влево на
один разряд. Комбинацию, полученную в результате циклического сдвига,
делят на К(х). Если в результате этого повторного деления W  s, то делимое
суммируют с остатком, затем
г) производят циклический сдвиг вправо на один разряд комбинации,
полученной в результате суммирования последнего делимого с последним
остатком. Полученная в результате комбинация уже не содержит ошибок.
Если после первого циклического сдвига и последующего деления остаток
получается таким, что его вес W > s, то
д) повторяют операцию пункта в) до тех пор, пока не будет W  s. В
этом случае комбинацию, полученную в результате последнего циклического
сдвига, суммируют с остатком от деления этой комбинации на образующий
многочлен, а затем
е) производят циклический сдвиг вправо ровно на столько разрядов,
на сколько была сдвинута суммируемая с последним остатком комбинация
относительно принятой комбинации. В результате получим исправленную
комбинацию.
3.2.1.2. Коды, обнаруживающие трехкратные ошибки, d0 = 4
1. Выбор числа корректирующих разрядов производится из
соотношения
nк  1 + log2(n + 1),
или
nк  1 + log2[(nи + 1) + log2(nи + 1)].
2. Выбор образующего многочлена производят исходя из следующих
соображений: для обнаружения трехкратной ошибки
d0 = r + 1 = 3 + 1 = 4,
поэтому степень образующего многочлена не может быть меньше
четырех; многочлен третьей степени, имеющей число ненулевых членов
большее или равное трем, позволяет обнаруживать все двойные ошибки,
многочлен первой степени (х + 1) обнаруживает любое количество нечетных
ошибок, следовательно, многочлен четвертой степени, получаемый в
результате умножения этих многочленов, обладает их корректирующими
свойствами: может обнаруживать две ошибки, а также одну и три, т.е. все
трехкратные ошибки.
3. Построение образующей матрицы производят либо нахождением
остатков от деления единицы с нулями на образующий многочлен, либо
умножением строк единичной матрицы на образующий многочлен.
4. Остальные комбинации корректирующего кода находят
суммированием по модулю 2 всевозможных сочетаний строк образующей
матрицы.
5. Обнаружение ошибок производится по остаткам от деления
принятой комбинации F(х) на образующий многочлен К(х). Если остатка нет,
то контрольные разряды отбрасываются, и информационная часть кода
используется по назначению. Если в результате деления получается остаток,
то комбинация бракуется. Заметим, что такие коды могут обнаруживать 75%
любого количества ошибок, так как кроме двойной ошибки обнаруживаются
все нечетные ошибки, но гарантированное количество ошибок, которое код
никогда не пропустит, равно 3.
4. Порядок выполнения работы
4.1. Задание №1
Для заданной образующей матрицы группового кода (9,5):
- составить контрольные соотношения;
- сформировать избыточный код по известной информационной
части;
- проверить правильность принятой кодовой комбинации и, если
код неверен, определить ошибочный разряд для возможной
однократной ошибки и дать два примера двухкратных ошибок,
приводящих к тому же контрольному синдрому.
Варианты информационной части образующей матрицы кода:
 Группа 1 Группа 2
0 0 0 0 1
0 0 0 1 0
0 0 1 0 0
0 1 0 0 0
1 0 0 0 0

1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
 Исходные данные к задаче 1 приведены в табл. 2.1 и 2.2.
 Варианты проверочной матрицы кода
 Таблица 2.1
N
п/п
Проверочная
матрица
N
п/п
Проверочна
я матрица
N
п/п
Проверочная
матрица
 1
0 0 1 1
0 1 0 1
1 0 0 1
1 0 1 0
1 1 0 0
7
1 1 0 0
1 0 0 1
1 0 1 1
0 1 1 1
0 1 0 1
13
1 1 0 1
1 1 1 0
1 1 1 1
0 1 1 1
1 0 1 1
2
0 1 1 0
1 0 1 0
1 1 0 0
1 0 1 1
0 1 1 1
8
0 0 1 1
0 1 1 0
1 1 0 0
0 1 1 1
1 1 1 0
14
0 1 0 1
1 0 1 1
1 0 1 0
1 0 0 1
0 0 1 1
3
1 1 1 1
0 1 1 1
0 0 1 1
1 0 0 1
1 1 0 0
9
1 1 1 1
1 1 1 0
1 1 0 1
1 0 1 1
0 1 1 1
15
0 1 1 1
1 0 1 1
1 1 0 1
1 1 1 0
1 1 1 1
4
1 1 0 1
0 1 1 0
1 0 1 1
1 1 1 0
0 1 1 1
10
0 1 0 1
1 0 1 0
0 1 1 1
1 1 1 1
1 1 1 0
16
1 0 0 1
0 0 1 1
0 1 1 0
1 1 0 0
1 0 1 1
5
1 1 1 0
1 1 1 1
0 1 1 1
0 0 1 1
1 0 0 1
11
1 0 1 1
1 1 0 1
1 1 1 0
1 1 1 1
0 1 1 1
17
1 1 1 0
0 0 1 1
1 1 0 1
0 1 1 0
1 1 1 1
6
0 1 1 1
1 0 1 0
1 1 0 0
0 1 1 0
1 0 1 1
12
1 0 1 0
0 0 1 1
1 1 1 0
1 1 0 1
0 1 1 1
18
0 1 0 1
0 0 1 1
1 0 1 1
1 1 0 1
1 1 1 0
 Таблица 2.2
 N
вар.
Информацион.
часть кода
 Избыточный
 Комбинация 1
 код
 Комбинация 2
 0 1 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 1
 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 0 1 1 1 0
 2 1 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1
 3 1 1 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 1 0 0 0 1
 4 0 1 0 1 1 1 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 0 0
 5 0 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 0 0 1 1 0 1 1
 6 1 0 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 0 1 0
 7 1 1 1 1 0 0 1 0 1 1 1 0 1 0 0 1 1 0 1 0 1 1 1
 8 1 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 1 1 0 0
 9 1 1 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 1 1 0 0 0 1
Вариант выбирается по младшей цифре порядкового номера студента в групповом журнале.
4.2. Задание № 2
Выполнить одно из заданий:
1.Создать код, способный закодировать 18 кодовых комбинаций, исправляющий одиночные и двойные
ошибки.
2.Составить таблицу опознавателей для кодов, предназначенных исправлять трехкратные ошибки.
3.Составить таблицу опознавателей для кодов, предназначенных исправлять четырехкратные ошибки.
4.3. Задание №3
По заданным информационной кодовой комбинации и образующему коду сформировать
избыточный циклический код. Построить образующую матрицу кода и проверить правильность заданной
комбинации. Для ошибочных комбинаций дополнительно выяснить, может ли быть полученный остаток
следствием однократной ошибки в пределах заданной разрядности кода. Если однократная ошибка
возможна, указать ошибочный разряд. Привести примеры двукратных ошибок, дающих тот же остаток.
Варианты заданий приведены в табл. 2.3.